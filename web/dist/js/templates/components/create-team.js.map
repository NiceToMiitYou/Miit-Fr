{"version":3,"sources":["components/create-team.jsx"],"names":[],"mappings":"AAAA,+CAA+C,0BAAA;;AAE/C,IAAI,eAAe,EAAE,WAAW;;QAExB,OAAO;YACH,WAAW,EAAE;gBACT,KAAK,EAAE,cAAc,CAAC,GAAG,CAAC,wBAAwB,EAAE,QAAQ,CAAC;gBAC7D,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,uBAAuB,GAAG,QAAQ,CAAC;aAChE;YACD,MAAM,EAAE,cAAc,CAAC,GAAG,CAAC,oBAAoB,EAAE,QAAQ,CAAC;SAC7D;AACT,KAAK;;IAED,YAAY,EAAE,SAAS,CAAC,EAAE;AAC9B,QAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;;QAEnB,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACpE,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACnE;;QAEQ,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;YACjB,OAAO;AACnB,SAAS;AACT;;QAEQ,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAClC,OAAO;AACnB,SAAS;AACT;;QAEQ,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO;AACnB,SAAS;AACT;;QAEQ,OAAO;AACf,KAAK;;AAEL,IAAI,MAAM,EAAE,WAAW;;QAEf;YACI,oBAAA,MAAK,EAAA,CAAA,CAAC,KAAA,EAAK,CAAC,4BAAA,EAA4B,CAAC,QAAA,EAAQ,CAAE,IAAI,CAAC,YAAc,CAAA,EAAA;gBAClE,oBAAA,KAAI,EAAA,IAAC,EAAA;oBACD,oBAAA,OAAM,EAAA,CAAA,CAAC,IAAA,EAAI,CAAC,MAAA,EAAM,CAAC,WAAA,EAAW,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAC,CAAC,GAAA,EAAG,CAAC,OAAO,CAAA,CAAG,CAAA,EAAA;oBAC5E,oBAAA,OAAM,EAAA,CAAA,CAAC,IAAA,EAAI,CAAC,MAAA,EAAM,CAAC,WAAA,EAAW,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAC,EAAE,GAAA,EAAG,CAAC,MAAM,CAAA,CAAG,CAAA,EAAA;oBAC3E,oBAAA,OAAM,EAAA,CAAA,CAAC,IAAA,EAAI,CAAC,QAAA,EAAQ,CAAC,KAAA,EAAK,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAA,CAAG,CAAA;gBAC/C,CAAA;YACH,CAAA;UACT;KACL;CACJ,CAAC","file":"components/create-team.js","sourcesContent":["MiitComponents.CreateTeam = React.createClass({\n\n    getInitialState: function() {\n\n        return {\n            placeholder: {\n                email: MiitTranslator.get('placeholder.your.email', 'inputs'),\n                team:  MiitTranslator.get('placeholder.team.name',  'inputs')\n            },\n            submit: MiitTranslator.get('submit.create.team', 'inputs')    \n        }\n    },\n\n    handleSubmit: function(e) {\n        e.preventDefault();\n\n        var email = React.findDOMNode(this.refs.email).value.trim();\n        var team  = React.findDOMNode(this.refs.team).value.trim();\n        \n        // Check if there is data\n        if (!email || !team) {\n            return;\n        }\n\n        // Check if this is a correct email\n        if(!MiitUtils.validator.email(email)) {\n            return;\n        }\n\n        // Check if this is a correct team name\n        if(!MiitUtils.validator.team(team)) {\n            return;\n        }\n\n\n        return;\n    },\n\n    render: function() {\n\n        return (\n            <form class=\"miit-component create-team\" onSubmit={this.handleSubmit}>\n                <div>\n                    <input type=\"text\" placeholder={this.state.placeholder.email} ref=\"email\" />\n                    <input type=\"text\" placeholder={this.state.placeholder.team}  ref=\"team\" />\n                    <input type=\"submit\" value={this.state.submit} />\n                </div>\n            </form>\n        );\n    }\n});"],"sourceRoot":"/source/"}