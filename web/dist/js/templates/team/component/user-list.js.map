{"version":3,"sources":["team/component/user-list.jsx"],"names":[],"mappings":"AAAA,6CAA6C,wBAAA;IACzC,eAAe,EAAE,WAAW;QACxB,OAAO;YACH,KAAK,KAAK,EAAE;YACZ,QAAQ,EAAE,KAAK;SAClB,CAAC;AACV,KAAK;;IAED,eAAe,EAAE,WAAW;QACxB,OAAO;YACH,MAAM,EAAE,KAAK;SAChB,CAAC;AACV,KAAK;;IAED,OAAO,EAAE,WAAW;AACxB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;;AAEvD,YAAY,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC;;AAErD,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;;gBAExB,IAAI,CAAC,QAAQ,CAAC;oBACV,MAAM,EAAE,IAAI;iBACf,CAAC,CAAC;aACN,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACjB;AACT,KAAK;;IAED,YAAY,EAAE,WAAW;QACrB,IAAI,CAAC,QAAQ,CAAC;YACV,MAAM,EAAE,KAAK;SAChB,CAAC,CAAC;AACX,KAAK;;IAED,MAAM,EAAE,WAAW;AACvB,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;;QAEf,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;YACpD,oBAAA,KAAI,EAAA,IAAC,EAAA,YAAgB,CAAA;AACjC,YAAY,IAAI,CAAC;;QAET;YACI,oBAAA,KAAI,EAAA,CAAA,CAAC,SAAA,EAAS,CAAC,0BAA2B,CAAA,EAAA;gBACtC,oBAAC,6BAA6B,EAAA,IAAA,CAAG,CAAA,EAAA;gBAChC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;oBACjC,OAAO,oBAAC,2BAA2B,EAAA,CAAA,CAAC,IAAA,EAAI,CAAE,IAAK,CAAA,CAAG,CAAA,CAAC;iBACtD,CAAC,EAAC;gBACF,OAAO,EAAC;gBACT,oBAAC,6BAA6B,EAAA,CAAA,CAAC,QAAA,EAAQ,CAAE,IAAI,CAAC,YAAa,CAAA,CAAG,CAAA;YAC5D,CAAA;UACR;KACL;CACJ,CAAC","file":"team/component/user-list.js","sourcesContent":["MiitComponents.UserList = React.createClass({\n    getDefaultProps: function() {\n        return {\n            users:    [],\n            autoload: false\n        };\n    },\n\n    getInitialState: function() {\n        return {\n            loaded: false\n        };\n    },\n\n    refresh: function() {\n        if(this.props.autoload && !this.state.loaded ) {\n\n            MiitApp.request.team.users(function(data){\n\n                this.props.users = data;\n\n                this.setState({\n                    loaded: true\n                });\n            }.bind(this));\n        }\n    },\n\n    allowRefresh: function() {\n        this.setState({\n            loaded: false\n        });\n    },\n\n    render: function() {\n        this.refresh();\n\n        var loading = (this.props.autoload && !this.state.loaded)?(\n            <div>Loading...</div>\n        ) : null;\n\n        return (\n            <div className=\"miit-component user-list\">\n                <MiitComponents.UserListHeader />\n                {this.props.users.map(function(user) {\n                    return <MiitComponents.UserListItem user={user} />;\n                })}\n                {loading}\n                <MiitComponents.UserListInvite onInvite={this.allowRefresh} />\n            </div>\n        );\n    }\n});"],"sourceRoot":"/source/"}