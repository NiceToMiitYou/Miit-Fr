{"version":3,"sources":["team/component/user-list-item-roles.jsx"],"names":[],"mappings":"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","file":"team/component/user-list-item-roles.js","sourcesContent":["MiitComponents.UserListItemRoles = React.createClass({\n    getDefaultProps: function() {\n        return {\n            text: {\n                admin:  MiitTranslator.get('user-list.actions.admin', 'team'),\n                user:   MiitTranslator.get('user-list.actions.user', 'team'),\n                remove: MiitTranslator.get('user-list.actions.remove', 'team')\n            },\n            user: {\n                id:    '',\n                roles: []\n            }\n        };\n    },\n\n    getInitialState: function() {\n        return {\n            loading: false\n        };\n    },\n\n    onAction: function(data) {\n        this.setState({\n            loading: false\n        });\n\n        if(typeof this.props.onAction === 'function') {\n            this.props.onAction();\n        }\n    },\n\n    toggleRole: function(role, cb) {\n        var action = 'promote';\n\n        if(this.props.user.roles.indexOf(role) >= 0) {\n            action = 'demote';\n        }\n\n        MiitApp.request.user[action](this.props.user.id, [role], this.onAction);\n    },\n\n    handleClick: function(action, e) {\n        e.preventDefault();\n\n        // Don't load twice\n        if(this.state.loading)\n            return;\n\n        var IAmAdmin    = MiitApp.utils.user.isAdmin();\n        var userIsOwner = MiitApp.utils.user.isOwner(this.props.user);\n        var userIsAdmin = MiitApp.utils.user.isAdmin(this.props.user);\n        var userIsMe    = MiitApp.utils.user.isItMe(this.props.user);\n\n        // Check if I am an admin and not myself or an owner\n        if(!IAmAdmin || userIsMe || userIsOwner)\n            return;\n\n        // Check if I want to remove an admin\n        if(action === 'REMOVE' && userIsAdmin)\n            return;\n\n        this.setState({\n            loading: true\n        });\n\n        switch(action) {\n            case 'ADMIN':\n            case 'USER':\n                this.toggleRole(action);\n                break;\n\n            case 'REMOVE':\n                MiitApp.request.user.remove(this.props.user.id, this.onAction);\n                break;\n        }\n    },\n\n    render: function() {\n        var cx = React.addons.classSet;\n\n        var IAmAdmin    = MiitApp.utils.user.isAdmin();\n        var userIsAdmin = MiitApp.utils.user.isAdmin(this.props.user);\n        var userIsUser  = MiitApp.utils.user.isUser(this.props.user);\n        var userIsMe    = MiitApp.utils.user.isItMe(this.props.user);\n\n        var user_active = cx({\n            disable: !IAmAdmin || userIsMe || userIsAdmin,\n            active:  userIsUser\n        });\n\n        var admin_active = cx({\n            disable: !IAmAdmin || userIsMe,\n            active:  userIsAdmin\n        });\n\n        var remove_active = cx({\n            disable: !IAmAdmin || userIsMe || userIsAdmin\n        });\n\n        return (\n            <span className=\"miit-component user-list-item-roles\">\n                <span onClick={this.handleClick.bind(this, 'USER')}   className={user_active} >\n                    {this.props.text.user}\n                </span>\n                <span onClick={this.handleClick.bind(this, 'ADMIN')}  className={admin_active}>\n                    {this.props.text.admin}\n                </span>\n                <span onClick={this.handleClick.bind(this, 'REMOVE')} className={remove_active}>\n                    {this.props.text.remove}\n                </span>\n            </span>\n        );\n    }\n});"],"sourceRoot":"/source/"}