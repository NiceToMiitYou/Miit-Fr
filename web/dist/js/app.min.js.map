{"version":3,"sources":["miit-app.js","miit-team.js","miit-user.js","miit-utils.js","team/team-app.js","team/component/change-password.js","team/component/user-list-header.js","team/component/user-list-invite.js","team/component/user-list-item-roles.js","team/component/user-list-item.js","team/component/user-list.js","team/menu/menu-team.js","team/page/miit-team-content.js","team/page/miit-team-header.js","www/component/create-team.js","app.concat.js"],"names":["React","window","MiitComponents","MiitApp","VERSION","request","team","obj","cb","utils","ajax","send","email","crsf","token","_token","user","password_old","password_new","first","second","user_id","user_roles","id","roles","name","terms","createXMLHTTPObject","xmlhttp","i","XMLHttpFactories","length","e","RegexEmail","RegexTeamName","RegexPassword","validatorGenerator","re","value","test","isUserGenerator","role","MiitCurrentUser","indexOf","isItMe","XMLHttpRequest","ActiveXObject","sendRequest","url","postData","req","method","open","setRequestHeader","onreadystatechange","readyState","status","result","JSON","parse","responseText","stringify","getCrsf","intention","data","isAdmin","isUser","isOwner","validator","password","TeamApp","createClass","displayName","render","createElement","className","MenuTeam","ChangePassword","MiitTeamHeader","MiitTeamContent","getDefaultProps","placeholder","old","MiitTranslator","get","submit","getInitialState","initial","this","getDefaultErrors","missing_old","missing_first","missing_second","invalid_old","invalid_same","invalid_repeated","invalid_format","handleChange","target","update","setState","handleSubmit","preventDefault","state","value_old","value_first","value_second","change_password","bind","cx","addons","classSet","classes_old","invalid","classes_first","classes_second","onSubmit","type","props","onChange","UserListHeader","title","action","actionElement","UserListInvite","missing_email","invalid_email","newValue","trim","invite","onInvite","classes_invalid","valueLinkEmail","requestChange","valueLink","UserListItemRoles","text","admin","remove","loading","onAction","toggleRole","handleClick","IAmAdmin","userIsOwner","userIsAdmin","userIsMe","userIsUser","user_active","disable","active","admin_active","remove_active","onClick","UserListItem","onEdit","UserList","users","autoload","loaded","refresh","allowRefresh","loadingElement","map","src","defaultChecked","disabled","rows","CreateTeam","missing_team","missing_terms","invalid_team","findDOMNode","refs","checked","registration","console","log","classes_email","classes_team","classes_terms","ref"],"mappings":"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","file":"app.min.js","sourcesContent":["window.MiitApp = (function(){\n    var VERSION = '0.0.0';\n\n\n    return {\n        VERSION: VERSION,\n        request: {}\n    };\n})();","MiitApp.request.team = (function(){\n    \"use strict\";\n\n    var obj = {};\n\n    obj['users'] = function(cb) {\n        // List all users\n        MiitApp.utils.ajax.send('/app/team/users', cb);\n    };\n\n    obj['invite'] = function(email, cb) {\n\n        // Request for CRSF\n        MiitApp.utils.ajax.crsf('registration', function(token) {\n\n            // Register the user\n            MiitApp.utils.ajax.send('/app/team/invite', {\n                'email':  email,\n                '_token': token\n            }, cb);\n        });\n    };\n\n    return obj;\n})();","MiitApp.request.user = (function(){\n    \"use strict\";\n\n    var obj = {};\n\n    obj['change_password'] = function(password_old, password_new, cb) {\n\n        // Request for CRSF\n        MiitApp.utils.ajax.crsf('change_password', function(token) {\n\n            // Register the user\n            MiitApp.utils.ajax.send('/app/user/change_password', {\n                'password_old': password_old,\n                'password_new': {\n                    'first':    password_new,\n                    'second':   password_new\n                },\n                '_token':       token\n            }, cb);\n        });\n    };\n\n    obj['promote'] = function(user_id, user_roles, cb) {\n\n        // Request for CRSF\n        MiitApp.utils.ajax.crsf('promote_user', function(token) {\n\n            // Promote the user\n            MiitApp.utils.ajax.send('/app/user/promote', {\n                'id':     user_id,\n                'roles':  user_roles,\n                '_token': token\n            }, cb);\n        });\n    };\n\n    obj['demote'] = function(user_id, user_roles, cb) {\n\n        // Request for CRSF\n        MiitApp.utils.ajax.crsf('demote_user', function(token) {\n\n            // Demote the user\n            MiitApp.utils.ajax.send('/app/user/demote', {\n                'id':     user_id,\n                'roles':  user_roles,\n                '_token': token\n            }, cb);\n        });\n    };\n\n    obj['remove'] = function(user_id, cb) {\n\n        // Request for CRSF\n        MiitApp.utils.ajax.crsf('remove_user', function(token) {\n\n            // Demote the user\n            MiitApp.utils.ajax.send('/app/user/remove', {\n                'id':  user_id,\n                '_token': token\n            }, cb);\n        });\n    };\n\n    obj['registration'] = function(email, team, cb) {\n\n        // Request for CRSF\n        MiitApp.utils.ajax.crsf('registration', function(token) {\n\n            // Register the user\n            MiitApp.utils.ajax.send('/register', {\n                'user': {\n                    'email': email\n                },\n                'team': {\n                    'name':  team\n                },\n                'terms':       true,\n                '_token':      token\n            }, cb);\n        });\n    };\n\n    return obj;\n})();","MiitApp.utils = (function() {\n    \"use strict\";\n    /**\n     * Validator part\n     */\n\n    // Regex for email\n    var RegexEmail    = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\n    // Regex for team name\n    var RegexTeamName = /^[a-z0-9]{4,}$/i;\n\n    // Regex for password\n    var RegexPassword = /^.{6,32}$/;\n\n    // Generate the validator for a regex\n    var validatorGenerator = function(re) {\n        // Return the validation function\n        return function(value) {\n            // Test the regex\n            return re.test(value);\n        };\n    };\n\n    // Generate the validator for user's role\n    var isUserGenerator = function(role) {\n        return function(user) {\n            if(!user) {\n                user = MiitCurrentUser;\n            }\n\n            return user.roles.indexOf(role) >= 0\n        };\n    };\n\n    // Check if this is the same user\n    var isItMe = function(user) {\n        return MiitCurrentUser.id === ((user || {}).id || null)\n    };\n\n    /**\n     * Ajax part\n     */\n\n    // get the list of HttpRequestHandlers\n    var XMLHttpFactories = [\n        function () {return new XMLHttpRequest()},\n        function () {return new ActiveXObject('Msxml2.XMLHTTP')},\n        function () {return new ActiveXObject('Msxml3.XMLHTTP')},\n        function () {return new ActiveXObject('Microsoft.XMLHTTP')}\n    ];\n\n    // Generator of HttpRequestHandler\n    function createXMLHTTPObject() {\n        var xmlhttp = false;\n        for (var i=0;i<XMLHttpFactories.length;i++) {\n            try {\n                xmlhttp = XMLHttpFactories[i]();\n            }\n            catch (e) {\n                continue;\n            }\n            break;\n        }\n        return xmlhttp;\n    }\n\n    // Send request method\n    var sendRequest = function(url, postData, cb) {\n        var req = createXMLHTTPObject();\n\n        if(!req) return;\n\n        if(typeof postData === 'function') {\n            cb       = postData;\n            postData = null;\n        }\n        \n        var method = (postData) ? 'POST' : 'GET';\n        \n        req.open(method, url, true);\n        \n        if(postData) {\n            req.setRequestHeader('Content-type','application/json');\n        }\n\n        req.onreadystatechange = function () {\n            if (req.readyState != 4) return;\n            if (req.status != 200 && req.status != 304) {\n                return;\n            }\n\n            var result;\n\n            try {\n                result = JSON.parse(req.responseText);\n            } catch(e) { }\n\n            if(typeof cb === 'function') {\n                cb(result);\n            }\n        };\n        \n        if (req.readyState == 4) return;\n\n        req.send(JSON.stringify(postData));\n    }\n\n    // Get CRSF token to validate Form.\n    var getCrsf = function(intention, cb) {\n        if(typeof intention === 'function') {\n            cb        = intention;\n            intention = null;\n        }\n\n        var url = '/_crsftoken/' + (intention || '');\n\n        sendRequest(url, function(data) {\n            if(data       &&\n               data.token &&\n               typeof cb === 'function') {\n\n                cb(data.token);\n            }\n        });\n    }\n\n    // Return the public object\n    return {\n        ajax: {\n            send: sendRequest,\n            crsf: getCrsf\n        },\n\n        user: {\n            isAdmin: isUserGenerator('ADMIN'),\n            isUser:  isUserGenerator('USER'),\n            isOwner: isUserGenerator('OWNER'),\n            isItMe:  isItMe,\n        },\n\n        validator: {\n            email:    validatorGenerator(RegexEmail),\n            password: validatorGenerator(RegexPassword),\n            team:     validatorGenerator(RegexTeamName)\n        }\n    };\n})();","MiitComponents.TeamApp = React.createClass({displayName: \"TeamApp\",\n    render: function() {\n        return (\n            React.createElement(\"div\", {className: \"page bg-grey lighten-5\"}, \n                React.createElement(MiitComponents.MenuTeam, null), \n                React.createElement(MiitComponents.ChangePassword, null), \n\n                React.createElement(\"div\", {className: \"main\"}, \n                    React.createElement(MiitComponents.MiitTeamHeader, null), \n                    React.createElement(MiitComponents.MiitTeamContent, null)\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../team/team-app.js.map","MiitComponents.ChangePassword = React.createClass({displayName: \"ChangePassword\",\n    getDefaultProps: function() {\n        return {\n            placeholder: {\n                old:    MiitTranslator.get('placeholder.your.password',   'inputs'),\n                first:  MiitTranslator.get('placeholder.password.first',  'inputs'),\n                second: MiitTranslator.get('placeholder.password.second', 'inputs')\n            },\n            submit: MiitTranslator.get('submit.change.password', 'inputs')\n        };\n    },\n\n    getInitialState: function() {\n\n        var initial = this.getDefaultErrors();\n\n        initial['value_old']    = '';\n        initial['value_first']  = '';\n        initial['value_second'] = '';\n\n        return initial;\n    },\n\n    getDefaultErrors: function() {\n        return {\n            missing_old:      false,\n            missing_first:    false,\n            missing_second:   false,\n            invalid_old:      false,\n            invalid_same:     false,\n            invalid_repeated: false,\n            invalid_format:   false\n        };\n    },\n    \n    handleChange: function(e) {\n        if(e.target && e.target.name) {\n            var update = {};\n            var name   = 'value_' + e.target.name;\n            var value  = e.target.value || '';\n\n            update[name] = value;\n\n            this.setState(update);\n        }\n    },\n\n    handleSubmit: function(e) {\n        e.preventDefault();\n\n        var old    = this.state.value_old;\n        var first  = this.state.value_first;\n        var second = this.state.value_second;\n        \n        this.setState(this.getDefaultErrors());\n\n        // Check if there is data\n        if (!old || !first || !second) {\n            this.setState({\n                missing_old:    !old,\n                missing_first:  !first,\n                missing_second: !second\n            });\n            return;\n        }\n\n        // Check if this is a correct repeated\n        if(first !== second) {\n            this.setState({\n                invalid_repeated: true\n            });\n            return;\n        }\n\n        // Check if the old is the same as the old\n        if(first === old) {\n            this.setState({\n                invalid_same: true\n            });\n            return;\n        }\n\n        // Check if this is a correct format\n        if(!MiitApp.utils.validator.password(first)) {\n            this.setState({\n                invalid_format: true\n            });\n            return;\n        }\n\n        MiitApp.request.user.change_password(old, first, function(data) {\n\n            // Reset value\n            this.setState({\n                value_old:    '',\n                value_first:  '',\n                value_second: ''\n            });\n        }.bind(this));\n\n        return;\n    },\n\n    render: function() {\n        var cx = React.addons.classSet;\n\n        var value_old      = this.state.value_old;\n        var classes_old    = cx({\n            'invalid': this.state.missing_old ||\n                       this.state.invalid_old\n        });\n\n        var value_first    = this.state.value_first;\n        var classes_first  = cx({\n            'invalid': this.state.missing_first ||\n                       this.state.invalid_same  ||\n                       this.state.invalid_format\n        });\n\n        var value_second   = this.state.value_second;\n        var classes_second = cx({\n            'invalid': this.state.missing_second ||\n                       this.state.invalid_repeated\n        });\n\n        return (\n            React.createElement(\"form\", {className: \"miit-component change-password\", onSubmit: this.handleSubmit}, \n                React.createElement(\"div\", null, \n                    React.createElement(\"input\", {type: \"password\", className: classes_old, value: value_old, placeholder: this.props.placeholder.old, onChange: this.handleChange, name: \"old\"}), \n                    React.createElement(\"input\", {type: \"password\", className: classes_first, value: value_first, placeholder: this.props.placeholder.first, onChange: this.handleChange, name: \"first\"}), \n                    React.createElement(\"input\", {type: \"password\", className: classes_second, value: value_second, placeholder: this.props.placeholder.second, onChange: this.handleChange, name: \"second\"}), \n                    React.createElement(\"input\", {type: \"submit\", value: this.props.submit})\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/component/change-password.js.map","MiitComponents.UserListHeader = React.createClass({displayName: \"UserListHeader\",\n    getDefaultProps: function() {\n        return {\n            title: {\n                name:   'Name',\n                action: 'Action'\n            }\n        };\n    },\n\n    render: function() {\n        var actionElement = null;\n\n        // Check if this is an admin\n        if(MiitApp.utils.user.isAdmin()){\n            actionElement = (React.createElement(\"span\", null, this.props.title.action));\n        }\n\n        return (\n            React.createElement(\"div\", {className: \"miit-component user-list-header\"}, \n                React.createElement(\"span\", null, this.props.title.name), \n                actionElement\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/component/user-list-header.js.map","MiitComponents.UserListInvite = React.createClass({displayName: \"UserListInvite\",\n    getDefaultProps: function() {\n        return {\n            placeholder: {\n                email: MiitTranslator.get('placeholder.email.invite', 'inputs')\n            },\n            submit: MiitTranslator.get('submit.invite.user', 'inputs')\n        };\n    },\n\n    getInitialState: function() {\n        var initial = this.getDefaultErrors();\n\n        initial['email'] = '';\n\n        return initial;\n    },\n\n    getDefaultErrors: function() {\n        return {\n            missing_email: false,\n            invalid_email: false\n        };\n    },\n    \n    handleChange: function(newValue) {\n        this.setState({\n            email: newValue.trim()\n        });\n    },\n\n    handleSubmit: function(e) {\n        e.preventDefault();\n\n        var email = this.state.email;\n        \n        this.setState(this.getDefaultErrors());\n\n        // Check if this is an admin\n        if(!MiitApp.utils.user.isAdmin()){\n            return;\n        }\n\n        // Check if there is data\n        if (!email) {\n            this.setState({\n                missing_email: true\n            });\n            return;\n        }\n\n        // Check if this is a correct format\n        if(!MiitApp.utils.validator.email(email)) {\n            this.setState({\n                invalid_email: true\n            });\n            return;\n        }\n\n        MiitApp.request.team.invite(email, function(data) {\n            this.setState({\n                email: ''\n            });\n\n            if(typeof this.props.onInvite === 'function') {\n                this.props.onInvite(email);\n            }\n        }.bind(this));\n\n        return;\n    },\n\n    render: function() {\n        // Check if this is an admin\n        if(!MiitApp.utils.user.isAdmin()){\n            return null;\n        }\n\n        var cx = React.addons.classSet;\n\n        var classes_invalid = cx({\n            'invalid': this.state.missing_email ||\n                       this.state.invalid_email\n        });\n\n        var valueLinkEmail  = {\n            value:         this.state.email,\n            requestChange: this.handleChange\n        };\n\n        return (\n            React.createElement(\"div\", {className: \"miit-component user-list-invite\"}, \n                React.createElement(\"form\", {onSubmit: this.handleSubmit}, \n                    React.createElement(\"input\", {type: \"text\", className: classes_invalid, placeholder: this.props.placeholder.email, valueLink: valueLinkEmail}), \n                    React.createElement(\"input\", {type: \"submit\", value: this.props.submit})\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/component/user-list-invite.js.map","MiitComponents.UserListItemRoles = React.createClass({displayName: \"UserListItemRoles\",\n    getDefaultProps: function() {\n        return {\n            text: {\n                admin:  MiitTranslator.get('user-list.actions.admin', 'team'),\n                user:   MiitTranslator.get('user-list.actions.user', 'team'),\n                remove: MiitTranslator.get('user-list.actions.remove', 'team')\n            },\n            user: {\n                id:    '',\n                roles: []\n            }\n        };\n    },\n\n    getInitialState: function() {\n        return {\n            loading: false\n        };\n    },\n\n    onAction: function(data) {\n        this.setState({\n            loading: false\n        });\n\n        if(typeof this.props.onAction === 'function') {\n            this.props.onAction();\n        }\n    },\n\n    toggleRole: function(role, cb) {\n        var action = 'promote';\n\n        if(this.props.user.roles.indexOf(role) >= 0) {\n            action = 'demote';\n        }\n\n        MiitApp.request.user[action](this.props.user.id, [role], this.onAction);\n    },\n\n    handleClick: function(action, e) {\n        e.preventDefault();\n\n        // Don't load twice\n        if(this.state.loading)\n            return;\n\n        var IAmAdmin    = MiitApp.utils.user.isAdmin();\n        var userIsOwner = MiitApp.utils.user.isOwner(this.props.user);\n        var userIsAdmin = MiitApp.utils.user.isAdmin(this.props.user);\n        var userIsMe    = MiitApp.utils.user.isItMe(this.props.user);\n\n        // Check if I am an admin and not myself or an owner\n        if(!IAmAdmin || userIsMe || userIsOwner)\n            return;\n\n        // Check if I want to remove an admin\n        if(action === 'REMOVE' && userIsAdmin)\n            return;\n\n        this.setState({\n            loading: true\n        });\n\n        switch(action) {\n            case 'ADMIN':\n            case 'USER':\n                this.toggleRole(action);\n                break;\n\n            case 'REMOVE':\n                MiitApp.request.user.remove(this.props.user.id, this.onAction);\n                break;\n        }\n    },\n\n    render: function() {\n        var cx = React.addons.classSet;\n\n        var IAmAdmin    = MiitApp.utils.user.isAdmin();\n        var userIsAdmin = MiitApp.utils.user.isAdmin(this.props.user);\n        var userIsUser  = MiitApp.utils.user.isUser(this.props.user);\n        var userIsMe    = MiitApp.utils.user.isItMe(this.props.user);\n\n        var user_active = cx({\n            disable: !IAmAdmin || userIsMe || userIsAdmin,\n            active:  userIsUser\n        });\n\n        var admin_active = cx({\n            disable: !IAmAdmin || userIsMe,\n            active:  userIsAdmin\n        });\n\n        var remove_active = cx({\n            disable: !IAmAdmin || userIsMe || userIsAdmin\n        });\n\n        return (\n            React.createElement(\"span\", {className: \"miit-component user-list-item-roles\"}, \n                React.createElement(\"span\", {onClick: this.handleClick.bind(this, 'USER'), className: user_active}, \n                    this.props.text.user\n                ), \n                React.createElement(\"span\", {onClick: this.handleClick.bind(this, 'ADMIN'), className: admin_active}, \n                    this.props.text.admin\n                ), \n                React.createElement(\"span\", {onClick: this.handleClick.bind(this, 'REMOVE'), className: remove_active}, \n                    this.props.text.remove\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/component/user-list-item-roles.js.map","MiitComponents.UserListItem = React.createClass({displayName: \"UserListItem\",\n    getDefaultProps: function() {\n        return {\n            user: {\n                id:    '',\n                name:  'unknow',\n                roles: []\n            }\n        };\n    },\n\n    render: function() {\n\n        return (\n            React.createElement(\"div\", {className: \"miit-component user-list-item\"}, \n                React.createElement(\"span\", null, this.props.user.name), \n                React.createElement(MiitComponents.UserListItemRoles, {user: this.props.user, onAction: this.props.onEdit})\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/component/user-list-item.js.map","MiitComponents.UserList = React.createClass({displayName: \"UserList\",\n    getDefaultProps: function() {\n        return {\n            users:    [],\n            autoload: false,\n            loading:  MiitTranslator.get('loading', 'team')\n        };\n    },\n\n    getInitialState: function() {\n        return {\n            loaded: false\n        };\n    },\n\n    refresh: function() {\n        if(this.props.autoload && !this.state.loaded ) {\n\n            MiitApp.request.team.users(function(data){\n\n                this.props.users = data;\n\n                this.setState({\n                    loaded: true\n                });\n            }.bind(this));\n        }\n    },\n\n    allowRefresh: function() {\n        this.setState({\n            loaded: false\n        });\n    },\n\n    render: function() {\n        this.refresh();\n\n        var loadingElement = null;\n\n        if(this.props.autoload && !this.state.loaded) {\n            loadingElement = (React.createElement(\"div\", null, this.props.loading));\n        }\n\n        return (\n            React.createElement(\"div\", {className: \"miit-component user-list\"}, \n                React.createElement(MiitComponents.UserListHeader, null), \n                this.props.users.map(function(user) {\n                    return React.createElement(MiitComponents.UserListItem, {user: user, onEdit: this.allowRefresh});\n                }.bind(this)), \n                loadingElement, \n                React.createElement(MiitComponents.UserListInvite, {onInvite: this.allowRefresh})\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/component/user-list.js.map","MiitComponents.MenuTeam = React.createClass({displayName: \"MenuTeam\",\n    render: function() {\n        return (\n            React.createElement(\"div\", {className: \"sidr-left bg-blue-grey\"}, \n                React.createElement(\"div\", {className: \"sl-wrapper\"}, \n                    React.createElement(\"a\", {className: \"sl-header bg-blue-grey darken-1\"}, \n                        React.createElement(\"i\", {className: \"fa fa-bars pull-left\"}), \n                        \"Menu\", \n                        React.createElement(\"i\", {className: \"fa fa-angle-down pull-right\"})\n                    ), \n\n                    React.createElement(\"span\", {className: \"sl-label\"}, React.createElement(\"i\", {className: \"mdi-action-favorite pull-left\"}), \" Favorites\"), \n\n                    React.createElement(\"ul\", {className: \"sl-list\"}, \n                        React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-weixin pull-left\"}), \"Chat miit\")), \n                        React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-question pull-left\"}), \"Quizz : Que pensez-vous...\"))\n                    ), \n\n                    React.createElement(\"span\", {className: \"sl-label\"}, React.createElement(\"i\", {className: \"fa fa-map-marker pull-left\"}), \" Miits\"), \n\n                    React.createElement(\"ul\", {className: \"sl-list\"}, \n                        React.createElement(\"li\", null, React.createElement(\"a\", {className: \"active\"}, React.createElement(\"i\", {className: \"fa fa-circle-thin pull-left stat-open\"}), \" Miit ouvert\")), \n                        React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-circle-thin pull-left stat-ready\"}), \" Miit prêt\")), \n                        React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-circle-thin pull-left stat-config\"}), \" Miit en configuration\")), \n                        React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-plus pull-left\"}), \" Créer un Miit\"))\n                    ), \n\n                    React.createElement(\"a\", {className: \"sl-footer\"}, \n                        React.createElement(\"div\", {className: \"avatar border-circle\"}, React.createElement(\"img\", {src: \"http://www.mangashare.com/forums/customavatars/avatar68124_1.gif\"})), \n                        React.createElement(\"span\", null, \"John Random\", \n                            React.createElement(\"i\", {className: \"fa fa-angle-up pull-right\"})\n                        )\n                    )\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../team/menu/menu-team.js.map","MiitComponents.MiitTeamContent = React.createClass({displayName: \"MiitTeamContent\",\n  render: function() {\n    return (\n        React.createElement(\"div\", {className: \"page-content page-dashboard\"}, \n            React.createElement(\"div\", {className: \"container\"}, \n                React.createElement(\"h1\", {className: \"mb30\"}, \"Dashboard\"), \n\n                React.createElement(\"h2\", null, \"Configuration\"), \n\n                React.createElement(\"h3\", {className: \"mt30 mb30\"}, React.createElement(\"i\", {className: \"fa fa-lock pull-left \"}), \" Confidentialité\"), \n                React.createElement(\"div\", {className: \"mb20\"}, \n                    React.createElement(\"div\", {className: \"checkbox-field mb20\"}, \n                        React.createElement(\"label\", null, \n                            React.createElement(\"input\", {type: \"radio\", name: \"confid\", className: \"option-input radio\", defaultChecked: true}), \n                            \"Publique\"\n                        )\n                    ), \n                    React.createElement(\"p\", {className: \"mb10\"}, \"Votre Miit est publique et accessible a tout le monde via l URL :\"), \n                    React.createElement(\"div\", {className: \"input-field pure-u-sm-1-3 mb20\"}, \n                        React.createElement(\"input\", {value: \"https://sncf.miit.fr/XBM56T\", type: \"text\", disabled: true})\n                    )\n                ), \n\n                React.createElement(\"div\", {className: \"mb20\"}, \n                    React.createElement(MiitComponents.UserList, {autoload: true})\n                ), \n\n                React.createElement(\"div\", {className: \"checkbox-field mb20\"}, \n                    React.createElement(\"label\", null, \n                        React.createElement(\"input\", {type: \"radio\", name: \"confid\", className: \"option-input radio\"}), \n                        \"Privé\"\n                    )\n                ), \n\n                React.createElement(\"p\", {className: \"mb10\"}, \"Votre Miit est privé et ne sera accessible qu aux personnes de votre choix\"), \n\n                React.createElement(\"div\", {className: \"input-field pure-u-sm-1-3\"}, \n                    React.createElement(\"i\", {className: \"fa fa-user-plus\"}), \n                    React.createElement(\"input\", {placeholder: \"Ajoutez une personne ou un cercle\", type: \"text\"})\n                ), \n\n\n                React.createElement(\"h3\", {className: \"mt30 mb30\"}, React.createElement(\"i\", {className: \"fa fa-info pull-left \"}), \" Informations\"), \n\n                React.createElement(\"div\", {className: \"input-field pure-u-sm-1-2 mb30\"}, \n                    React.createElement(\"label\", null, \"Titre\"), \n                    React.createElement(\"input\", {placeholder: \"Titre\", id: \"title\", type: \"text\", value: \"Miit ouvert\"})\n                ), \n\n                React.createElement(\"div\", {className: \"input-field pure-u-sm-2-3\"}, \n                    React.createElement(\"label\", null, \"Description\"), \n                    React.createElement(\"textarea\", {placeholder: \"Description\", rows: \"6\"}, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \")\n                ), \n\n                React.createElement(\"h3\", {className: \"mt30\"}, React.createElement(\"i\", {className: \"fa fa-circle-thin pull-left stat-open\"}), \" Status\"), \n                React.createElement(\"p\", {className: \"mt30 mb30\"}, React.createElement(\"i\", {className: \"fa fa-info pull-left\"}), \" Votre Miit est ouvert est prêt à être utilisé\"), \n                React.createElement(\"button\", {className: \"btn mr20\"}, \"Ouvert\"), React.createElement(\"button\", {className: \"btn btn-warning mr20\"}, \"Fermer\"), React.createElement(\"button\", {className: \"btn btn-danger mr20\"}, \"Supprimer\"), \n\n                React.createElement(\"h2\", {className: \"mt30\"}, \"Applications\")\n            ), \n            React.createElement(\"ul\", {className: \"app-list\"}, \n\n                React.createElement(\"li\", null, \n                    React.createElement(\"a\", null, \n                        React.createElement(\"i\", {className: \"fa fa-weixin bg-blue\"}), \n                        React.createElement(\"span\", null, \"Chat\")\n                    )\n                ), \n\n                React.createElement(\"li\", null, \n                    React.createElement(\"a\", null, \n                        React.createElement(\"i\", {className: \"fa fa-question bg-green\"}), \n                        React.createElement(\"span\", null, \"Quizz\")\n                    )\n                ), \n\n                React.createElement(\"li\", null, \n                    React.createElement(\"a\", {className: \"add-app\"}, \n                        React.createElement(\"i\", {className: \"fa fa-plus bg-blue-grey\"}), \n                        React.createElement(\"span\", null, \"Ajouter une App\")\n                    )\n                )\n\n            )\n        \n        )\n    );\n  }\n});\n\n//# sourceMappingURL=../../team/page/miit-team-content.js.map","MiitComponents.MiitTeamHeader = React.createClass({displayName: \"MiitTeamHeader\",\n  render: function() {\n    return (\n        React.createElement(\"div\", {className: \"page-header z-depth-1\"}, \n            React.createElement(\"h1\", null, React.createElement(\"i\", {className: \"fa fa-circle-thin pull-left stat-open\"}), \" Miit ouvert \", React.createElement(\"a\", {className: \"ph-title\"}, React.createElement(\"i\", {className: \"fa fa-cog pull-right\"}))), \n\n            React.createElement(\"ul\", {className: \"ph-btn-list\"}, \n                React.createElement(\"li\", {className: \"active\"}, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-question pull-left\"}), \"Quizz \", React.createElement(\"span\", null, \"Que pensez-vous de...\"), \" \", React.createElement(\"i\", {className: \"fa fa-times pull-right\"}))), \n                React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-weixin\"}), \"Chat\", React.createElement(\"i\", {className: \"fa fa-times pull-right\"}))), \n                React.createElement(\"li\", null, React.createElement(\"a\", null, React.createElement(\"i\", {className: \"fa fa-plus pull-left\"}), \" Ajouter\"))\n            )\n        )\n    );\n  }\n});\n\n//# sourceMappingURL=../../team/page/miit-team-header.js.map","MiitComponents.CreateTeam = React.createClass({displayName: \"CreateTeam\",\n    getDefaultProps: function() {\n        return {\n            placeholder: {\n                email: MiitTranslator.get('placeholder.your.email', 'inputs'),\n                team:  MiitTranslator.get('placeholder.team.name',  'inputs')\n            },\n            submit: MiitTranslator.get('submit.create.team', 'inputs')\n        };\n    },\n\n    getInitialState: function() {\n\n        return this.getDefaultErrors();\n    },\n\n    getDefaultErrors: function() {\n        return {\n            missing_email: false,\n            missing_team:  false,\n            missing_terms: false,\n            invalid_email: false,\n            invalid_team:  false\n        };\n    },\n\n    handleSubmit: function(e) {\n        e.preventDefault();\n\n        var email = React.findDOMNode(this.refs.email).value.trim();\n        var team  = React.findDOMNode(this.refs.team).value.trim();\n        var terms = React.findDOMNode(this.refs.terms).checked;\n\n        this.setState(this.getDefaultErrors());\n\n        // Check if there is data\n        if (!email || !team || !terms) {\n            this.setState({\n                missing_email: !email,\n                missing_team:  !team,\n                missing_terms: !terms\n            });\n            return;\n        }\n\n        // Check if this is a correct email\n        if(!MiitApp.utils.validator.email(email)) {\n            this.setState({\n                invalid_email: true\n            });\n            return;\n        }\n\n        // Check if this is a correct team name\n        if(!MiitApp.utils.validator.team(team)) {\n            this.setState({\n                invalid_team: true\n            });\n            return;\n        }\n\n        // Request for CRSF\n        MiitApp.request.user.registration(email, team, function(data) {\n            console.log(data);    \n        });\n\n        return;\n    },\n\n    render: function() {\n        var cx = React.addons.classSet;\n\n        var classes_email = cx({\n            'invalid': this.state.missing_email ||\n                       this.state.invalid_email\n        });\n\n        var classes_team = cx({\n            'invalid':  this.state.missing_team ||\n                        this.state.invalid_team\n        });\n\n        var classes_terms = cx({\n            'invalid': this.state.missing_terms\n        });\n\n        return (\n            React.createElement(\"form\", {className: \"miit-component create-team\", onSubmit: this.handleSubmit}, \n                React.createElement(\"div\", null, \n                    React.createElement(\"input\", {type: \"text\", className: classes_email, placeholder: this.props.placeholder.email, ref: \"email\"}), \n                    React.createElement(\"input\", {type: \"text\", className: classes_team, placeholder: this.props.placeholder.team, ref: \"team\"}), \n                    React.createElement(\"input\", {type: \"checkbox\", className: classes_terms, ref: \"terms\"}), \n                    React.createElement(\"input\", {type: \"submit\", value: this.props.submit})\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../../www/component/create-team.js.map",null],"sourceRoot":"/source/"}