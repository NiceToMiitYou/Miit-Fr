{"version":3,"sources":["test.js","applications/miit-team-home-page.js","components/create-team.js","utils.js","app.concat.js"],"names":["React","window","MiitComponents","createClass","displayName","render","createElement","this","props","name","MiitTeamHomePage","CreateTeam","getInitialState","placeholder","email","MiitTranslator","get","team","submit","handleSubmit","e","preventDefault","findDOMNode","refs","value","trim","MiitUtils","validator","class","onSubmit","type","state","ref","RegexEmail","RegexTeamName","validatorGenerator","re","test","validation"],"mappings":"CAAA,SAAAA,GACAC,OAAAC,iBACAF,GAAAG,aAAAC,YAAA,aACAC,OAAA,WACA,MAAAL,GAAAM,cAAA,MAAA,KAAA,SAAAC,KAAAC,MAAAC,QCFAR,QAAAS,iBAAAV,EAAAG,aAAAC,YAAA,mBACAC,OAAA,WACA,MAAAL,GAAAM,cAAA,MAAA,KAAA,sBCFAJ,eAAAS,WAAAX,EAAAG,aAAAC,YAAA,aAEAQ,gBAAA,WAEA,OACAC,aACAC,MAAAC,eAAAC,IAAA,yBAAA,UACAC,KAAAF,eAAAC,IAAA,wBAAA,WAEAE,OAAAH,eAAAC,IAAA,qBAAA,YAIAG,aAAA,SAAAC,GACAA,EAAAC,gBAEA,IAAAP,GAAAd,EAAAsB,YAAAf,KAAAgB,KAAAT,OAAAU,MAAAC,OACAR,EAAAjB,EAAAsB,YAAAf,KAAAgB,KAAAN,MAAAO,MAAAC,MAGAX,IAAAG,GAKAS,EAAAC,UAAAb,MAAAA,KAKAY,EAAAC,UAAAV,KAAAA,IAQAZ,OAAA,WAEA,MACAL,GAAAM,cAAA,QAAAsB,QAAA,6BAAAC,SAAAtB,KAAAY,cACAnB,EAAAM,cAAA,MAAA,KACAN,EAAAM,cAAA,SAAAwB,KAAA,OAAAjB,YAAAN,KAAAwB,MAAAlB,YAAAC,MAAAkB,IAAA,UACAhC,EAAAM,cAAA,SAAAwB,KAAA,OAAAjB,YAAAN,KAAAwB,MAAAlB,YAAAI,KAAAe,IAAA,SACAhC,EAAAM,cAAA,SAAAwB,KAAA,SAAAN,MAAAjB,KAAAwB,MAAAb,aC7CA,IAAAQ,GAAA,WAEA,GAAAO,GAAA,qFAGAC,EAAA,kBAGAC,EAAA,SAAAC,GAEA,MAAA,UAAAZ,GAEA,MAAAY,GAAAC,KAAAb,IAIA,QACAc,YACAxB,MAAAqB,EAAAF,GACAhB,KAAAkB,EAAAD,SCqEGlC","file":"app.min.js","sourcesContent":["var HelloWorld = React.createClass({displayName: \"HelloWorld\",\n  render: function() {\n    return React.createElement(\"div\", null, \"Hello \", this.props.name);\n  }\n});\n//# sourceMappingURL=test.js.map","window.MiitTeamHomePage = React.createClass({displayName: \"MiitTeamHomePage\",\n  render: function() {\n    return React.createElement(\"div\", null, \"Hello from Team\");\n  }\n});\n//# sourceMappingURL=../applications/miit-team-home-page.js.map","MiitComponents.CreateTeam = React.createClass({displayName: \"CreateTeam\",\n\n    getInitialState: function() {\n\n        return {\n            placeholder: {\n                email: MiitTranslator.get('placeholder.your.email', 'inputs'),\n                team:  MiitTranslator.get('placeholder.team.name',  'inputs')\n            },\n            submit: MiitTranslator.get('submit.create.team', 'inputs')    \n        }\n    },\n\n    handleSubmit: function(e) {\n        e.preventDefault();\n\n        var email = React.findDOMNode(this.refs.email).value.trim();\n        var team  = React.findDOMNode(this.refs.team).value.trim();\n        \n        // Check if there is data\n        if (!email || !team) {\n            return;\n        }\n\n        // Check if this is a correct email\n        if(!MiitUtils.validator.email(email)) {\n            return;\n        }\n\n        // Check if this is a correct team name\n        if(!MiitUtils.validator.team(team)) {\n            return;\n        }\n\n\n        return;\n    },\n\n    render: function() {\n\n        return (\n            React.createElement(\"form\", {class: \"miit-component create-team\", onSubmit: this.handleSubmit}, \n                React.createElement(\"div\", null, \n                    React.createElement(\"input\", {type: \"text\", placeholder: this.state.placeholder.email, ref: \"email\"}), \n                    React.createElement(\"input\", {type: \"text\", placeholder: this.state.placeholder.team, ref: \"team\"}), \n                    React.createElement(\"input\", {type: \"submit\", value: this.state.submit})\n                )\n            )\n        );\n    }\n});\n//# sourceMappingURL=../components/create-team.js.map","var MiitUtils = (function() {\n    // Regex for email\n    var RegexEmail    = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\n    // Regex for team name\n    var RegexTeamName = /^[a-z0-9]{4,}$/i;\n\n    // Generate the validator for a regex\n    var validatorGenerator = function(re) {\n        // Return the validation function\n        return function(value) {\n            // Test the regex\n            return re.test(value);\n        };\n    }\n\n    return {\n        validation: {\n                email: validatorGenerator(RegexEmail),\n                team:  validatorGenerator(RegexTeamName)\n            }\n        };\n})();",null],"sourceRoot":"/source/"}